{"version":3,"sources":["Components/shared/Hero.js","StateProvider.js","helpers/BASE_URL.js","Components/models/CreatePost.js","Components/shared/NavBar.js","Components/shared/Forum.js","Components/shared/Post.js","Home.js","Components/Post/CommentForm.js","Post.js","helpers/submitForm.js","Register.js","Components/Admin/Sidebar.js","Components/Admin/User.js","Components/Admin/ManagePost.js","Components/Admin/Moderator.js","Components/Admin/ManageModerators.js","Admin.js","Login.js","Moderator.js","About.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["Hero","id","style","color","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","BASE_URL","CreatePost","useState","titleError","setTitleError","postError","setPostError","className","background","display","onClick","document","getElementById","placeholder","height","e","preventDefault","title","body","length","console","log","fetch","method","JSON","stringify","headers","loginToken","localStorage","getItem","then","res","json","data","success","toast","error","catch","err","NavBar","user","isShowing","setIsShowing","exact","to","activeClassName","prev","name","setItem","window","location","reload","Forum","Post","isLink","type","overflow","Home","posts","setPosts","useEffect","map","key","CommentForm","postId","comment","history","pushState","match","params","post","setPost","comments","setComments","width","marginBottom","submitForm","a","d","respones","Register","setName","emal","setEmail","pwd","setPwd","errors","setErrors","updateFormValue","field","sendForm","email","respnse","push","errorObject","details","context","label","message","for","onChange","target","Sidebar","which","User","setUser","ManagePost","Moderator","useranme","changeList","Math","random","ManageModerators","listChanged","setListChanged","moderators","setModerators","required","username","Admin","adminId","path","component","Login","dispatch","invalildCredentailsError","setInavldiCredientalsErr","search","replace","split","quaerKey","queryValue","moderatorId","About","padding","maxWidth","App","Boolean","hostname","state","action","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46a16e12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../css/components/shared/Hero.scss\";\r\n\r\nfunction Hero() {\r\n  return (\r\n    <div id=\"hero\">\r\n      <h1 style={{ color: \"#ffffff\" }}>Discussion Leads To Solution</h1>\r\n      {/* <form>\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n        <button id=\"submitQuery\">S</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","// setup data layer\r\n// We need this to track the basket\r\n\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// THIS IS THE DATA LAYER\r\nexport const StateContext = createContext();\r\n\r\n// BUILD A PROVIDER\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n// This is how we use it inside of a component\r\nexport const useStateValue = () => useContext(StateContext);\r\n","const BASE_URL = \"https://warm-dusk-39605.herokuapp.com\";\r\n//const BASE_URL = \"http://localhost:4000\";\r\nexport default BASE_URL;\r\n","import React, { useState } from \"react\";\r\nimport \"../../css/components/models/CreatePost.scss\";\r\nimport \"../../css/Register.scss\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction CreatePost() {\r\n  const [titleError, setTitleError] = useState(\"\");\r\n  const [postError, setPostError] = useState(\"\");\r\n  const closePostModel = () => {\r\n    document.getElementById(\"register-outer\").style.display = \"none\";\r\n  };\r\n\r\n  const submitPost = (e) => {\r\n    e.preventDefault();\r\n    const title = document.getElementById(\"title\").value;\r\n    const body = document.getElementById(\"body\").value;\r\n    if (title.length < 6) {\r\n      setTitleError(\"Title must be at least 6 chacters Long\");\r\n    }\r\n\r\n    if (body.length < 12) {\r\n      setPostError(\"Post must be at least 12 chacters Long\");\r\n    }\r\n\r\n    if (title.length > 6 && body.length > 12) {\r\n      setTitleError(\"\");\r\n      setPostError(\"\");\r\n      console.log(title);\r\n      fetch(`${BASE_URL}/post/create/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title: document.getElementById(\"title\").value,\r\n          body: document.getElementById(\"body\").value,\r\n        }),\r\n        headers: {\r\n          loginToken: localStorage.getItem(\"loginToken\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) =>\r\n        res\r\n          .json()\r\n          .then((data) => {\r\n            if (data.success) {\r\n              toast.success(\"Post Added\");\r\n            } else {\r\n              toast.error(\"Error\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"post-model\"\r\n        className=\"modal\"\r\n        id=\"register-outer\"\r\n        style={{ background: \"rgba(0, 0, 0, 0.4)\", display: \"none\" }}\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <span className=\"close\" onClick={closePostModel}>\r\n              &times;\r\n            </span>\r\n            <h2>Create Post</h2>\r\n          </div>\r\n          <div className=\"modal-body\" id=\"register\">\r\n            <form id=\"register-form\">\r\n              <span className=\"error\">{titleError}</span>\r\n              <textarea id=\"title\" placeholder=\"Enter Post title\" />\r\n\r\n              <span className=\"error\">{postError}</span>\r\n              <textarea\r\n                style={{ height: \"100px\" }}\r\n                placeholder=\"Type you Post\"\r\n                id=\"body\"\r\n              />\r\n\r\n              <button className=\"btn add-to-cart\" onClick={submitPost}>\r\n                Create Post\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useState } from \"react\";\r\nimport \"../../css/components/shared/NavBar.scss\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CreatePost from \"../models/CreatePost\";\r\n\r\nfunction NavBar() {\r\n  const openPostModel = () => {\r\n    document.getElementById(\"register-outer\").style.display = \"block\";\r\n  };\r\n\r\n  const [{ user }] = useStateValue();\r\n\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  const logout = () => {\r\n    localStorage.setItem(\"loginToken\", null);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CreatePost />\r\n      <div id=\"nav-bar-conatiner\">\r\n        <h1 id=\"logo\">Forum</h1>\r\n        <ul id=\"nav\">\r\n          <NavLink\r\n            className=\"nav-item\"\r\n            exact\r\n            to=\"/\"\r\n            activeClassName=\"nav-item-active\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            className=\"nav-item\"\r\n            exact\r\n            to=\"/about\"\r\n            activeClassName=\"nav-item-active\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          {user ? (\r\n            <li\r\n              className=\"nav-item nav-button\"\r\n              id=\"makePostButton\"\r\n              onClick={openPostModel}\r\n            >\r\n              Create Post\r\n            </li>\r\n          ) : (\r\n            <NavLink to=\"/register\">\r\n              <li className=\"nav-item nav-button\" id=\"register\">\r\n                Register\r\n              </li>\r\n            </NavLink>\r\n          )}\r\n          {user ? (\r\n            <div\r\n              id=\"profile-circle\"\r\n              onClick={() => {\r\n                setIsShowing((prev) => {\r\n                  return !prev;\r\n                });\r\n              }}\r\n            >\r\n              {user?.name[0]}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ul>\r\n        <div\r\n          id=\"prifile-dropdow\"\r\n          style={{ display: isShowing ? \"block\" : \"none\" }}\r\n        >\r\n          <div>{user?.name}</div>\r\n          <hr></hr>\r\n          <div id=\"logout\" onClick={logout}>\r\n            Logout\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/components/shared/Forum.scss\";\r\nfunction Forum({ title, id }) {\r\n  return (\r\n    <Link to={`/post/${id}`}>\r\n      <div id=\"forum\">\r\n        <p className=\"link\">{title}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Forum;\r\n","import React from \"react\";\r\nimport \"../../css/components/shared/Post.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Post({ id, title, body, isLink = true, type }) {\r\n  return (\r\n    <div className=\"post-container\">\r\n      {isLink ? (\r\n        <Link to={`/post/${id}`}>\r\n          <h1 className=\"post-hadding\">{title}</h1>\r\n          <p className=\"post-body\">{body}</p>\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"post-hadding\">{title}</h1>\r\n          <p\r\n            className=\"post-body\"\r\n            style={{ overflow: type == \"comment\" ? \"visible\" : \"hidden\" }}\r\n          >\r\n            {body}\r\n          </p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Forum from \"./Components/shared/Forum\";\r\nimport Post from \"./Components/shared/Post\";\r\nimport \"./css/Home.scss\";\r\nimport BASE_URL from \"./helpers/BASE_URL\";\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/post/`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setPosts(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n    fetch(`${BASE_URL}/post/`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setPosts(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <div id=\"left\">\r\n        {posts.map(({ title, id, body }) => {\r\n          return <Post title={title} id={id} body={body} key={id} />;\r\n        })}\r\n      </div>\r\n      <div id=\"right\">\r\n        <h3>Most Popular Posts</h3>\r\n        {posts.map(({ id, title }) => {\r\n          return <Forum id={id} title={title} key={id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../../css/components/Post/PostComment.scss\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction CommentForm({ postId }) {\r\n  const [{ user }] = useStateValue();\r\n  const publishComment = (e) => {\r\n    e.preventDefault();\r\n    if (!user) {\r\n      window.history.pushState(\"login\", \"LOgin page \", \"/login\");\r\n      window.location.reload();\r\n    } else {\r\n      const comment = document.getElementById(\"comment\").value;\r\n\r\n      console.log(comment);\r\n      fetch(`${BASE_URL}/comment/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          postId: postId,\r\n          comment: comment,\r\n        }),\r\n        headers: {\r\n          loginToken: localStorage.getItem(\"loginToken\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) =>\r\n        res\r\n          .json()\r\n          .then((data) => {\r\n            console.log(data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"comment-form\">\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Type you comment\" id=\"comment\" />\r\n        <button id=\"submitQuery\" onClick={publishComment}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Forum from \"./Components/shared/Forum\";\r\nimport \"./css/Post.scss\";\r\nimport P from \"./Components/shared/Post\";\r\nimport CommentForm from \"./Components/Post/CommentForm\";\r\nimport BASE_URL from \"./helpers/BASE_URL\";\r\n\r\nfunction Post({ match }) {\r\n  const postId = match.params.id;\r\n  const [post, setPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/post/${postId}`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setPost(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n    fetch(`${BASE_URL}/comment/${postId}`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setComments(data);\r\n          console.log(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }, []);\r\n  return (\r\n    <div id=\"home\">\r\n      <div id=\"left\" style={{ width: \"100%\" }}>\r\n        <h1\r\n          className=\"post-hadding-detail link\"\r\n          style={{ marginBottom: \"15px\" }}\r\n        >\r\n          {post?.title}\r\n        </h1>\r\n        <p className=\"post-body\">{post?.body}</p>\r\n        {/* <button id=\"post-comment\">Post Comment</button> */}\r\n        <CommentForm postId={post?.id} />\r\n        <h3 id=\"reply-hadding\">All Replies</h3>\r\n        {comments.map(({ id, comment, name }) => {\r\n          return (\r\n            <P\r\n              key={id}\r\n              title={name}\r\n              body={comment}\r\n              isLink={false}\r\n              type=\"comment\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import BASE_URL from \"./BASE_URL\";\r\nconst submitForm = async (type, data) => {\r\n  let respones;\r\n  await fetch(`${BASE_URL}/user/${type}/`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) =>\r\n    res\r\n      .json()\r\n      .then((d) => {\r\n        respones = d;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  );\r\n\r\n  return respones;\r\n};\r\n\r\nexport default submitForm;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Register.scss\";\r\nimport submitForm from \"./helpers/submitForm\";\r\n\r\nfunction Register({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [emal, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  const updateFormValue = (field, value) => {\r\n    switch (field) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"pwd\":\r\n        setPwd(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const sendForm = async (e) => {\r\n    e.preventDefault();\r\n    const respnse = await submitForm(\"register\", {\r\n      name: name,\r\n      email: emal,\r\n      pwd: pwd,\r\n    });\r\n    if (!respnse.success) {\r\n      let errorObject = {};\r\n      respnse.error.details.map((error) => {\r\n        errorObject[error.context.label] = error.message;\r\n      });\r\n      setErrors(errorObject);\r\n    } else {\r\n      setErrors(null);\r\n      localStorage.setItem(\"loginToken\", respnse.loginToken);\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"register-outer\">\r\n      <h1>Forum</h1>\r\n      <div id=\"register\">\r\n        <h2>Create account</h2>\r\n        <form id=\"register-form\">\r\n          <label for=\"name\">Your Name</label>\r\n          <span className=\"error\">{errors?.name}</span>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              updateFormValue(\"name\", e.target.value);\r\n            }}\r\n          />\r\n\r\n          <label for=\"email\">Email</label>\r\n          <span className=\"error\">{errors?.email}</span>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={emal}\r\n            onChange={(e) => {\r\n              updateFormValue(\"email\", e.target.value);\r\n            }}\r\n          />\r\n\r\n          <label for=\"pwd\">Password</label>\r\n          <span className=\"error\">{errors?.pwd}</span>\r\n          <input\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            value={pwd}\r\n            onChange={(e) => {\r\n              updateFormValue(\"pwd\", e.target.value);\r\n            }}\r\n          />\r\n\r\n          <button className=\"btn add-to-cart\" onClick={sendForm}>\r\n            Create your Account\r\n          </button>\r\n        </form>\r\n\r\n        <span id=\"alreay-member\">\r\n          Already have an account?{\" \"}\r\n          <Link className=\"link\" to=\"/login\">\r\n            Sign-In\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"../../css/components/Admin/Sidebar.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Sidebar({ which }) {\r\n  return (\r\n    <div id=\"sidebar\">\r\n      <NavLink\r\n        className=\"item\"\r\n        to={`/${which}`}\r\n        exact\r\n        activeClassName=\"item-active\"\r\n      >\r\n        <div>Manage Users</div>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"item\"\r\n        to={`/${which}/mangePost`}\r\n        activeClassName=\"item-active\"\r\n        exact\r\n      >\r\n        <div>Manage Posts</div>\r\n      </NavLink>\r\n\r\n      {which == \"admin\" ? (\r\n        <NavLink\r\n          className=\"item\"\r\n          to=\"/admin/manageModerators\"\r\n          activeClassName=\"item-active\"\r\n          exact\r\n        >\r\n          <div>Manage Moderators</div>\r\n        </NavLink>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\n\r\nfunction User() {\r\n  useEffect(() => {}, []);\r\n  const [user, setUser] = useState({});\r\n  const getUserByEmail = (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"email\").value;\r\n    fetch(`${BASE_URL}/user/getByEmail/${email}`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setUser(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  const deleteUser = () => {\r\n    fetch(`${BASE_URL}/user/delete/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: user.id,\r\n      }),\r\n      headers: {\r\n        id: \"jajajj\", //cahnge this\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) =>\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setUser({});\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Get user By Email</h3>\r\n      <form id=\"admin-form\">\r\n        <input type=\"email\" placeholder=\"Enter User Email\" id=\"email\" />\r\n        <button onClick={getUserByEmail}>GET</button>\r\n      </form>\r\n      {user.id ? (\r\n        <>\r\n          <h3>User Info</h3>\r\n          <div className=\"admin-active\">\r\n            id : <span>{user.id}</span>\r\n          </div>\r\n          <div className=\"admin-active\">\r\n            Nmae : <span>{user.name}</span>\r\n          </div>\r\n          <div className=\"admin-active\">\r\n            Email : <span>{user.email}</span>\r\n          </div>\r\n          <button id=\"button\" onClick={deleteUser}>\r\n            Delete User\r\n          </button>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\n\r\nfunction ManagePost() {\r\n  useEffect(() => {}, []);\r\n  const [user, setUser] = useState({});\r\n  const getUserByEmail = (e) => {\r\n    e.preventDefault();\r\n    const id = document.getElementById(\"id\").value;\r\n    fetch(`${BASE_URL}/post/${id}`).then((res) => {\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setUser(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  const deleteUser = () => {\r\n    fetch(`${BASE_URL}/post/delete/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: user.id,\r\n      }),\r\n      headers: {\r\n        id: \"jajajj\", //cahnge this\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) =>\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setUser({});\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Get Post By Id</h3>\r\n      <form id=\"admin-form\">\r\n        <input type=\"text\" placeholder=\"Enter Post id\" id=\"id\" />\r\n        <button onClick={getUserByEmail}>GET</button>\r\n      </form>\r\n      {user.id ? (\r\n        <>\r\n          <h3>User Info</h3>\r\n          <div className=\"admin-active\">\r\n            id : <span>{user.id}</span>\r\n          </div>\r\n          <div className=\"admin-active\">\r\n            Title : <span>{user.title}</span>\r\n          </div>\r\n          <div className=\"admin-active\">\r\n            Body : <span>{user.body}</span>\r\n          </div>\r\n\r\n          <button id=\"button\" onClick={deleteUser}>\r\n            Delete Post\r\n          </button>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagePost;\r\n","import React from \"react\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\n\r\nfunction Moderator({ useranme, id, changeList }) {\r\n  const deleteUser = () => {\r\n    fetch(`${BASE_URL}/moderator/delete/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: id,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) =>\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          changeList(Math.random());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  };\r\n  return (\r\n    <div id=\"moderator\">\r\n      <div className=\"admin-active\">\r\n        Username : <span>{useranme}</span>\r\n      </div>\r\n\r\n      <button id=\"button\" onClick={deleteUser}>\r\n        Delete This moderator\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BASE_URL from \"../../helpers/BASE_URL\";\r\nimport Moderator from \"./Moderator\";\r\n\r\nfunction ManageModerators() {\r\n  const [listChanged, setListChanged] = useState(1);\r\n  const [moderators, setModerators] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/moderator/`).then((res) =>\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setModerators(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  }, [listChanged]);\r\n  const createModerator = (e) => {\r\n    e.preventDefault();\r\n    const useranme = document.getElementById(\"username\").value;\r\n    const pwd = document.getElementById(\"pwd\").value;\r\n    fetch(`${BASE_URL}/moderator/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        useranme: useranme,\r\n        pwd: pwd,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) =>\r\n      res\r\n        .json()\r\n        .then((data) => {\r\n          setListChanged(Math.random());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <form id=\"admin-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Username\"\r\n          id=\"username\"\r\n          required\r\n        />\r\n        <br />\r\n        <input type=\"password\" placeholder=\"Enter Password\" id=\"pwd\" required />\r\n        <br />\r\n\r\n        <button onClick={createModerator}>Create Moderator</button>\r\n      </form>\r\n      <h3 style={{ marginBottom: \"20px\" }}>All Moderators</h3>\r\n      {moderators.map(({ id, username }) => {\r\n        return (\r\n          <Moderator\r\n            useranme={username}\r\n            id={id}\r\n            key={id}\r\n            changeList={setListChanged}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageModerators;\r\n","import React from \"react\";\r\nimport Sidebar from \"./Components/Admin/Sidebar\";\r\nimport User from \"./Components/Admin/User\";\r\nimport \"./css/Admin.scss\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ManagePost from \"./Components/Admin/ManagePost\";\r\nimport ManageModerators from \"./Components/Admin/ManageModerators\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Admin({ history }) {\r\n  const [{ adminId }] = useStateValue();\r\n\r\n  //redirect to login if adminId is not set\r\n  if (!adminId) {\r\n    history.push(\"/login/?admin\");\r\n  }\r\n  return (\r\n    <div style={{ background: \"#ffffff\" }} id=\"admin\">\r\n      <Sidebar which=\"admin\" />\r\n      <div id=\"admin-right\">\r\n        <Switch>\r\n          <Route exact path=\"/admin\" component={User} />\r\n          <Route exact path=\"/admin/mangePost\" component={ManagePost} />\r\n          <Route\r\n            exact\r\n            path=\"/admin/manageModerators\"\r\n            component={ManageModerators}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Register.scss\";\r\nimport submitForm from \"./helpers/submitForm\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Login({ history, location }) {\r\n  const [emal, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const [invalildCredentailsError, setInavldiCredientalsErr] = useState(\"\");\r\n\r\n  const updateFormValue = (field, value) => {\r\n    switch (field) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"pwd\":\r\n        setPwd(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getFormTitle = () => {\r\n    if (location.search == \"?admin\") {\r\n      return \"Admin Login\";\r\n    } else if (location.search == \"?moderator\") {\r\n      return \"Moderator Login\";\r\n    } else {\r\n      return \"Forum\";\r\n    }\r\n  };\r\n\r\n  const sendForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (location.search == \"?admin\") {\r\n      const respnse = await submitForm(\"login\", {\r\n        username: emal,\r\n        pwd: pwd,\r\n        which: \"admin\",\r\n      });\r\n\r\n      if (!respnse.success) {\r\n        setInavldiCredientalsErr(\"Inavlid Email or Password\");\r\n      } else {\r\n        setInavldiCredientalsErr(\"\");\r\n        localStorage.setItem(\"loginToken\", respnse.loginToken);\r\n        const [quaerKey, queryValue] = location.search\r\n          .replace(\"?\", \"\")\r\n          .split(\"=\");\r\n        if (quaerKey == \"redirectTo\") {\r\n          history.push(queryValue);\r\n          window.location.reload();\r\n        } else {\r\n          console.log(respnse.id);\r\n          dispatch({\r\n            type: \"SET_ADMIN_ID\",\r\n            value: respnse.id,\r\n          });\r\n          history.push(\"/admin\");\r\n        }\r\n      }\r\n    } else if (location.search == \"?moderator\") {\r\n      const respnse = await submitForm(\"login\", {\r\n        username: emal,\r\n        pwd: pwd,\r\n        which: \"moderator\",\r\n      });\r\n\r\n      if (!respnse.success) {\r\n        setInavldiCredientalsErr(\"Inavlid Email or Password\");\r\n      } else {\r\n        setInavldiCredientalsErr(\"\");\r\n        localStorage.setItem(\"loginToken\", respnse.loginToken);\r\n        const [quaerKey, queryValue] = location.search\r\n          .replace(\"?\", \"\")\r\n          .split(\"=\");\r\n        if (quaerKey == \"redirectTo\") {\r\n          history.push(queryValue);\r\n          window.location.reload();\r\n        } else {\r\n          console.log(respnse.id);\r\n          dispatch({\r\n            type: \"SET_MOD_ID\",\r\n            value: respnse.id,\r\n          });\r\n          history.push(\"/moderator\");\r\n        }\r\n      }\r\n    } else {\r\n      const respnse = await submitForm(\"login\", {\r\n        email: emal,\r\n        pwd: pwd,\r\n      });\r\n      if (!respnse.success) {\r\n        setInavldiCredientalsErr(\"Inavlid Email or Password\");\r\n      } else {\r\n        setInavldiCredientalsErr(\"\");\r\n        localStorage.setItem(\"loginToken\", respnse.loginToken);\r\n        const [quaerKey, queryValue] = location.search\r\n          .replace(\"?\", \"\")\r\n          .split(\"=\");\r\n        if (quaerKey == \"redirectTo\") {\r\n          history.push(queryValue);\r\n          window.location.reload();\r\n        } else {\r\n          history.push(\"/\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"register-outer\">\r\n      <h1>{getFormTitle()}</h1>\r\n      <div id=\"register\">\r\n        <h2>Sign-In</h2>\r\n        <form id=\"register-form\">\r\n          <span className=\"error\">{invalildCredentailsError}</span>\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={(e) => {\r\n              updateFormValue(\"email\", e.target.value);\r\n            }}\r\n            value={emal}\r\n          />\r\n\r\n          <label for=\"pwd\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={(e) => {\r\n              updateFormValue(\"pwd\", e.target.value);\r\n            }}\r\n            value={pwd}\r\n          />\r\n\r\n          <button className=\"btn add-to-cart\" onClick={sendForm}>\r\n            Sign-In\r\n          </button>\r\n        </form>\r\n\r\n        {location.search ? (\r\n          \"\"\r\n        ) : (\r\n          <span id=\"alreay-member\">\r\n            Dont have a account?{\" \"}\r\n            <Link className=\"link\" to=\"/register\">\r\n              register\r\n            </Link>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Sidebar from \"./Components/Admin/Sidebar\";\r\nimport User from \"./Components/Admin/User\";\r\nimport \"./css/Admin.scss\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ManagePost from \"./Components/Admin/ManagePost\";\r\nimport ManageModerators from \"./Components/Admin/ManageModerators\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Moderator({ history }) {\r\n  const [{ adminId, moderatorId }] = useStateValue();\r\n\r\n  if (!moderatorId) {\r\n    history.push(\"/login/?moderator\");\r\n  }\r\n  return (\r\n    <div style={{ background: \"#ffffff\" }} id=\"admin\">\r\n      <Sidebar which=\"moderator\" />\r\n      <div id=\"admin-right\">\r\n        <Switch>\r\n          <Route exact path=\"/moderator\" component={User} />\r\n          <Route exact path=\"/moderator/mangePost\" component={ManagePost} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderator;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"600px\" }}>\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\r\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n      est laborum.\" Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written\r\n      by Cicero in 45 BC \"Sed ut perspiciatis unde omnis iste natus error sit\r\n      voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque\r\n      ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\nimport Hero from \"./Components/shared/Hero\";\nimport NavBar from \"./Components/shared/NavBar\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Post from \"./Post.js\";\nimport Register from \"./Register\";\nimport Admin from \"./Admin\";\nimport { useStateValue } from \"./StateProvider\";\nimport BASE_URL from \"./helpers/BASE_URL\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Moderator from \"./Moderator\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport About from \"./About\";\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  useEffect(() => {\n    if (localStorage.getItem(\"loginToken\")) {\n      fetch(`${BASE_URL}/user/getUserInfo/`, {\n        method: \"GET\",\n\n        headers: {\n          loginToken: localStorage.getItem(\"loginToken\"),\n        },\n      }).then((res) =>\n        res\n          .json()\n          .then((data) => {\n            if (data.success) {\n              dispatch({\n                type: \"SET_USER_INFO\",\n                value: data,\n              });\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      );\n    }\n  }, []);\n  return (\n    <>\n      <ToastContainer />\n      <div className=\"header\">\n        <Switch>\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/moderator\" component={Moderator} />\n          <Route path=\"*\">\n            <NavBar />\n            <Hero />\n          </Route>\n        </Switch>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/post/:id\" component={Post} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  adminId: null,\r\n  user: null,\r\n  moderatorId: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_INFO\":\r\n      return {\r\n        ...state,\r\n        user: action.value,\r\n      };\r\n    case \"SET_ADMIN_ID\":\r\n      // Logic for adding item to basket\r\n      return {\r\n        ...state,\r\n        adminId: action.value,\r\n      };\r\n\r\n    case \"SET_MOD_ID\":\r\n      // Logic for adding item to basket\r\n      return {\r\n        ...state,\r\n        moderatorId: action.value,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n      </StateProvider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}